Features
Here‚Äôs the list of features that are available by üè≠ Engines:

üì§ Messages - API
Fields
There are common fields that you can find in almost all requests:


{
  "session": "default",
  "chatId": "12132132130@c.us",
  "file": "..."
}
session
session - a session name from which account you‚Äôre sending the message. We use default in the examples.

Core version supports only default session.
Plus allows you to run multiple sessions inside one container to save your memory and CPU resources!
Read more about multiple sessions ‚Üí

chatId
chatId - this is a phone number or Group identifier where you‚Äôre sending the message.

123123123@c.us Phone numbers accounts - international phone number without + at the start and add @c.us at the end. For phone number 12132132131 the chatId is 12132132131@c.us
123123123@s.whatsapp.net can also appear in internal data for NOWEB, just convert it to @c.us to work with that properly. Kindly don‚Äôt use it in chatId when sending messages
12312312123133@g.us - Groups uses random number with @g.us at the end.
123123123@lid - is a hidden user ID, each user has a regular ID along with a hidden one. WhatsApp added that type of ID along with communities functionality.
123123123@newsletter - for üì∞ WhatsApp Channels.
üëâ To get the actual chatId for üáßüá∑ Brazilian phone number - use chatId field from Check phone number exists response.

Read more about error sending text to half of Brazilian numbers (every number registered before 2012) ->

file
When sending media (images, voice, files) you can either use:

file.data field with base64 encoded file
file.url field with public available URL for that file
See the list of engines that support the feature ->.

reply_to
You can add the reply_to field in order to reply to a specific message.


{
  "chatId": "11111111111@c.us",
  ...
  "reply_to": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA"
}
reply_to is available in all messages

Send Seen
If you get a new message via üîÑ Events and want to reply to that message, you need to first send that you‚Äôve seen the message (double green tick) - read ‚ö†Ô∏è How to Avoid Blocking

Read all unread messages in the chat

Check üí¨ Chats - Read messages API to read messages without providing message id.


POST /api/sendSeen
Send seen (read a message) for all unread messages older than 7 days (30 max for DM, 100 max for groups)

Body

{
  "session": "default",
  "chatId": "11111111111@c.us"
}
In NOWEB and GOWS üè≠ Engines you can control what messages to read by using messagesIds (or deprecated messageId) field:

Send seen for direct message:

Body

{
  "session": "default",
  "chatId": "11111111111@c.us",
  "messageIds": [
    "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA"
  ]
}
Send seen for Group Message you need to provide participant field:

Body

{
  "session": "default",
  "chatId": "11111111111@g.us",
  "messageIds": [
    "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA_33333333333@c.us"
  ],
  "participant": "33333333333@c.us"
}
Here‚Äôs how you can call it from various languages:

cURL
Python
JavaScript
PHP

<?php
$url = "http://localhost:3000/api/sendSeen";
$data = [
    "session" => "default",
    "chatId" => "12132132130@c.us"
];

$ch = curl_init($url);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_POST, true);
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'X-Api-Key: yoursecretkey'
]);
$response = curl_exec($ch);
curl_close($ch);

echo $response;
?>
Send Text
Use the API to send text messages to the chat.


POST /api/sendText
Body

{
  "session": "default",
  "chatId": "12132132130@c.us",
  "text": "Hi there!"
}
Here‚Äôs how you can call it from various languages:

cURL
Python
JavaScript
PHP

<?php
$url = "http://localhost:3000/api/sendText";
$data = [
    "session" => "default",
    "chatId" => "12132132130@c.us",
    "text" => "Hi there!"
];

$ch = curl_init($url);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_POST, true);
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'X-Api-Key: yoursecretkey'
]);
$response = curl_exec($ch);
curl_close($ch);

echo $response;
?>
Here‚Äôs some additional options:

reply_to: false_1111@c.us_AAA - to reply on a message
mentions - to mention a contact in a group
linkPreview: false - to disable preview generation for links in the message
Link preview

POST /api/sendText
Body

{
  "session": "default",
  "chatId": "12132132130@c.us",
  "text": "Hi there!",
  "linkPreview": true,
  "linkPreviewHighQuality": true
}
If the text has a link - it generates a preview for that link. You adjust the behaviour by setting

linkPreview: true - to enable link preview
linkPreviewHighQuality: true - to enable high-quality link preview (requires additional upload to WA servers)
üñºÔ∏è Link Preview Screenshot
Custom Link Preview

If link preview generation process fails or site protects it with captcha - you can generate your own preview and Send Custom Link Preview

Reply on message
To reply on a message - add reply_to field:

Body

{
  "session": "default",
  "chatId": "11111111111@c.us",
  "reply_to": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA",
  "text": "Reply text"
}
Mention contact
If you send a message in a group and want to mention a participant in the message - use mentions field for that in POST /api/sendText request.

Please note that you MUST mention a number in the text as well in the format @2132132130 and also mention it in mentions in format 2132132130@c.us

Body

{
  "session": "default",
  "chatId": "12132132130@c.us",
  "text": "Hi there! @2132132130",
  "mentions": [
    "2132132130@c.us"
  ]
}
Send Image
Use API to send images to the chat.


POST /api/sendImage
You can send images in two ways:

Provide a URL for the image.
Encode the whole file content into BASE64 and send it in the request body.
URL
BASE64
Body

{
  "session": "default",
  "chatId": "11111111111@c.us",
  "file": {
    "mimetype": "image/jpeg",
    "url": "https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.jpg",
    "filename": "filename.jpeg"
  },
  "caption": "string"
}
Here‚Äôs how you can call it from various languages:

cURL
Python
JavaScript
PHP

<?php
$url = "http://localhost:3000/api/sendImage";
$data = [
    "session" => "default",
    "chatId" => "12132132130@c.us",
    "file" => [
        "mimetype" => "image/jpeg",
        "url" => "https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.jpg",
        "filename" => "filename.jpeg"
    ],
    "caption" => "Check out this image!"
];

$ch = curl_init($url);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_POST, true);
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'X-Api-Key: yoursecretkey'
]);
$response = curl_exec($ch);
curl_close($ch);

echo $response;
?>
Send Voice
Use API to send voice messages to the chat.


POST /api/sendVoice
You can send voice messages in two ways:

Provide a URL for the voice.
Encode the whole file content into BASE64 and send it in the request body.
URL
BASE64
Body

{
  "session": "default",
  "chatId": "11111111111@c.us",
  "file": {
    "mimetype": "audio/ogg; codecs=opus",
    "url": "https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.opus"
  },
  "convert": false
}
Fields:

file - provide one of the fields:
url - URL to the file
data - Base 64 encoded binary content of the file
convert: false - convert the file to the right format. Default: false
Set convert: true if you don‚Äôt have the right format, check the format note below.
Voice File Format

WhatsApp accept only file with OPUS encoding and packed in OGG container.

If you have a file in a different format (like mp3) you can use one of the options:

Set convert: true in the body when calling API:
Body

{
  ...,
  "convert": true
}
Convert file before sending by calling üñºÔ∏è Media - Convert Voice

Run ffmpeg:


ffmpeg -i input.mp3 -c:a libopus -b:a 32k -ar 48000 -ac 1 output.opus
Here‚Äôs how you can call it from various languages:

cURL
Python
JavaScript
PHP

<?php
$url = "http://localhost:3000/api/sendVoice";
$data = [
    "session" => "default",
    "chatId" => "12132132130@c.us",
    "file" => [
        "mimetype" => "audio/ogg; codecs=opus",
        "url" => "https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.opus"
    ],
    "convert" => false
];

$ch = curl_init($url);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_POST, true);
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'X-Api-Key: yoursecretkey'
]);
$response = curl_exec($ch);
curl_close($ch);

echo $response;
?>
